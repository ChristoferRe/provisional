/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UIPresentation.Dashboard.users;

import DataAccess.Responses.BadResponse;
import DataAccess.Users.Users;
import com.google.gson.Gson;
import com.google.gson.JsonSyntaxException;
import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author braya
 */
public class UsersPanelUI extends javax.swing.JPanel implements KeyListener {

    private String token;

    public UsersPanelUI(String token) {
        this.token = token;
        //Lo primero que haremos antes de inicializar los componentes es buscar todos los usuarios de la compañia
        initComponents();
        txtSearch.addKeyListener(this);

        listUsers.start();
        jLabel2.setVisible(false);
    }
    //Hilo para listar usuarios
    Thread listUsers = new Thread() {
        @Override
        public void run() {
            try {
                Users users = new Users(token);
                String response = users.getUsers("1");
                //Transformamos el json object a java object
                Users uList = new Gson().fromJson(response, Users.class);
                //Llenamos la jtable con un amatriz
                String matriz[][] = new String[uList.getUsers().length][4];
                for (int i = 0; i < uList.getUsers().length; i++) {
                    matriz[i][0] = uList.getUsers()[i].schedule;
                    matriz[i][1] = uList.getUsers()[i].names;
                    matriz[i][2] = uList.getUsers()[i].role;
                    matriz[i][3] = uList.getUsers()[i].createdAt;
                }
                jTblUsers.setModel(new javax.swing.table.DefaultTableModel(
                        matriz,
                        new String[]{
                            "Identificación", "Nombres", "Rol", "Fecha de Registro"
                        }));
            } catch (InterruptedException ex) {
                Logger.getLogger(UsersPanelUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    };

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTblUsers = new javax.swing.JTable();
        btnVerify = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 153, 0));

        jTblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Identificación", "Nombres", "Rol", "Fecha de Registro"
            }
        ));
        jScrollPane1.setViewportView(jTblUsers);

        btnVerify.setText("Crear Usuario");
        btnVerify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerifyActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar Usuario:");

        jLabel2.setText("No se han encontrado resultados...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(114, 114, 114)
                        .addComponent(btnVerify))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVerify)
                        .addGap(75, 75, 75))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(64, 64, 64)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerifyActionPerformed
        //Abrimos el jframe 812 500
        VerifyScheduleUI verify = new VerifyScheduleUI(this.token);
        verify.setSize(814, 502);
        this.removeAll();
        this.add(verify, BorderLayout.CENTER);
        this.revalidate();
        this.repaint();
        this.remove(this);
    }//GEN-LAST:event_btnVerifyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVerify;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblUsers;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {

    }

    @Override
    public void keyPressed(KeyEvent e) {

    }

    @Override
    public void keyReleased(KeyEvent e) {
        
        Thread searchUser = new Thread() {

        public void run() {
            try {
                //Recogemos datos de el texto
                String data = txtSearch.getText();
                
                if(data == ""){
                    jLabel2.setVisible(true);
                    listUsers.start();
                }
                else{
                    jLabel2.setVisible(false);
                    
                }
                
                Users users = new Users(token);
                String response = users.searchUser(data);
                if (response == null) {
                    //Se cierra el programa porque es incorrecto
                    JOptionPane.showMessageDialog(jScrollPane1, "Tu sesión ha acabado");
                    
                    System.exit(0);
                } else {
                    Users uList = new Gson().fromJson(response, Users.class);
                    //Llenamos la jtable con un amatriz
                    String matriz[][] = new String[uList.getUsers().length][4];

                    for (int i = 0; i < uList.getUsers().length; i++) {
                        matriz[i][0] = uList.getUsers()[i].schedule;
                        matriz[i][1] = uList.getUsers()[i].names;
                        matriz[i][2] = uList.getUsers()[i].role;
                        matriz[i][3] = uList.getUsers()[i].createdAt;
                    }

                    jTblUsers.setModel(new javax.swing.table.DefaultTableModel(
                            matriz,
                            new String[]{
                                "Identificación", "Nombres", "Rol", "Fecha de Registro"
                            }));
                }

            } catch (InterruptedException ex) {
                JOptionPane.showMessageDialog(jScrollPane1, ex.getMessage());
            } catch (JsonSyntaxException ex) {
                jLabel2.setVisible(true);
            }
        }

    };
        searchUser.start();
        
    }
}
